/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root == nullptr){
            return res;
        }
        queue<TreeNode*> s;
        s.push(root);
        bool order = true;
        while(!s.empty())
        {
            int size = s.size();
            deque<int> levelList;
            for(int i = 0; i < size; ++i){
                TreeNode* top = s.front();
                s.pop();
                if(order){
                    levelList.push_back(top->val);
                }
                else {
                    levelList.push_front(top->val);
                }
                if(top->left){
                    s.push(top->left);
                }
                if(top->right){
                    s.push(top->right);
                }
            }
            order = !order;
            res.emplace_back(vector<int>{levelList.begin(), levelList.end()});
        }
        return res;
    }
};
