class Solution {
public:
    bool checkValidString(string s) {
        stack<int> left, star; // 栈中保存下标
        for(int i = 0; i < s.size(); ++i){
            if(s[i] == '('){
                left.push(i);
            }
            else if(s[i] == '*'){
                star.push(i);
            }
            else { // 先出栈left中的左括号，在出栈*
                if(left.empty() && star.empty()) return false;
                if(!left.empty()) left.pop();
                else star.pop();
            }
        }
        while(!left.empty() && !star.empty()){
            if(left.top() > star.top()) return false; // 如果left的下标大于*的下标，那么就直接返回false
            left.pop();
            star.pop();
        }
        return left.empty();
    }
};
