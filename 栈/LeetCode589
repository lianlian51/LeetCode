/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> preorder(Node* root) {
        vector<int> ans;
        stack<Node*> s;

        if(!root) return ans;

        s.push(root);
        while(!s.empty())
        {
            Node* node = s.top();
            s.pop();
            if(node){
                ans.emplace_back(node->val);
            }
            else {
                continue;
            }

            if(!node->children.empty()){
                int size = node->children.size();
                for(int i = size - 1; i >= 0; --i){
                    Node* n = node->children[i];
                    if(n){
                        s.push(n);
                    }
                }
            }
        }
        return ans;
    }
};
