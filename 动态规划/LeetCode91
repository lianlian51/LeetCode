class Solution {
public:
    int numDecodings(string s) {
        // 动态规划：考虑怎么一个字母的解码和两个字母的解码
        int n = s.size();
        // if(s.empty()){
        //     return 0;
        // }

        // if(s[0] == '0'){
        //     return 0;
        // }
        vector<int> f(n + 1);
        f[0] = 1;
        for(int i = 1; i <= n; ++i){
            if(s[i - 1] != '0'){
                f[i] += f[i-1];
            }
            if(i > 1 && s[i-2] != '0' && (s[i-2] -'0')*10 + (s[i-1] - '0') <= 26){
                f[i] += f[i-2];
            }
        }
        return f[n];
    }
};
